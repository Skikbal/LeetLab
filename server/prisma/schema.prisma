// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model User {
  id                           String    @id @default(uuid())
  name                         String?
  email                        String    @unique
  avatar                       String?   @default("https://avatar.iran.liara.run/public/boy")
  role                         UserRole  @default(USER)
  password                     String
  refreshToken                 String?
  isVerified                   Boolean?  @default(false)
  unverifiedEmail              String?
  emailVerificationToken       String?
  emailVerificationTokenExpiry DateTime?
  forgotPasswordToken          String?
  forgotPasswordTokenExpiry    DateTime?
  createdAt                    DateTime  @default(now())
  updatedAt                    DateTime  @updatedAt
  //relations
  problems                     Problem[]
}

model Problem {
  id          String     @id @default(uuid())
  title       String
  description String
  difficulty  Difficulty @default(EASY)
  tags        String[] //["string","string","string"]
  userId      String
  examples    Json
  constraints String
  hints       String?
  editorial   String?

  testcases        Json
  codesnippets     Json
  refrencesolution Json
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  //relations
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
